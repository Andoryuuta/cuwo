environment:
  matrix:


    # Python 2.6.6 is the latest Python 2.6 with a Windows installer
    # See: https://github.com/ogrisel/python-appveyor-demo/issues/10

    - PYTHON: "C:\\Python36"
      PYTHON_VERSION: "3.6.1"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python36-x64"
      PYTHON_VERSION: "3.6.1"
      PYTHON_ARCH: "64"

install:
  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  # Upgrade to the latest version of pip to avoid it displaying warnings
  # about it being out of date.
  - "pip install --disable-pip-version-check --user --upgrade pip"

  # Install the build dependencies of the project. If some dependencies contain
  # compiled extensions and are not provided as pre-built wheel packages,
  # pip will build them from source using the MSVC compiler matching the
  # target Python version and architecture
  - "pip install -r requirements.txt"
  - "pip install cx_Freeze"

build_script:
  # Build the compiled extension
  - "python setup.py build_ext --inplace"

test_script:
  # Run the project tests
  # - "python tests/test_tgen.py"

after_test:
  # If tests are successful, create binary packages for the project.
  - "cd standalone"
  - "build.bat"
  - ps: "ls dist"

artifacts:
  # Archive the generated packages in the ci.appveyor.com build report.
  - path: standalone\dist\*

#on_success:
#  - TODO: upload the content of dist/*.whl to a public wheelhouse
#